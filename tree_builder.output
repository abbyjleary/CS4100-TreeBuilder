Terminals which are not used

   FOR
   IN
   '['
   ']'
   ':'
   ','


State 17 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: prog

    2 prog: statement prog
    3     | /* empty */

    4 statement: buildnodeStatement

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' '}' ';'

    7 intExpression: NUMBER
    8              | VAR
    9              | intExpression '+' intExpression

   10 stringExpression: STRING
   11                 | VAR
   12                 | stringExpression '+' stringExpression


Terminals, with rules where they appear

$end (0) 0
'+' (43) 9 12
',' (44)
':' (58)
';' (59) 5 6
'=' (61) 5 6
'[' (91)
']' (93)
'{' (123) 5 6
'}' (125) 5 6
error (256)
BUILDNODE (258) 5 6
FOR (259)
NUMBER (260) 7
VAR (261) 8 11
STRING (262) 10
IN (263)
NAME (264) 5 6
WEIGHT (265) 5 6
ISACHILDOF (266) 5


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
start (22)
    on left: 1, on right: 0
prog (23)
    on left: 2 3, on right: 1 2
statement (24)
    on left: 4, on right: 2
buildnodeStatement (25)
    on left: 5 6, on right: 4
intExpression (26)
    on left: 7 8 9, on right: 5 6 9
stringExpression (27)
    on left: 10 11 12, on right: 5 6 12


state 0

    0 $accept: . start $end

    BUILDNODE  shift, and go to state 1

    $default  reduce using rule 3 (prog)

    start               go to state 2
    prog                go to state 3
    statement           go to state 4
    buildnodeStatement  go to state 5


state 1

    5 buildnodeStatement: BUILDNODE . '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE . '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' '}' ';'

    '{'  shift, and go to state 6


state 2

    0 $accept: start . $end

    $end  shift, and go to state 7


state 3

    1 start: prog .

    $default  reduce using rule 1 (start)


state 4

    2 prog: statement . prog

    BUILDNODE  shift, and go to state 1

    $default  reduce using rule 3 (prog)

    prog                go to state 8
    statement           go to state 4
    buildnodeStatement  go to state 5


state 5

    4 statement: buildnodeStatement .

    $default  reduce using rule 4 (statement)


state 6

    5 buildnodeStatement: BUILDNODE '{' . NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' . NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' '}' ';'

    NAME  shift, and go to state 9


state 7

    0 $accept: start $end .

    $default  accept


state 8

    2 prog: statement prog .

    $default  reduce using rule 2 (prog)


state 9

    5 buildnodeStatement: BUILDNODE '{' NAME . '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME . '=' stringExpression ';' WEIGHT '=' intExpression ';' '}' ';'

    '='  shift, and go to state 10


state 10

    5 buildnodeStatement: BUILDNODE '{' NAME '=' . stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' . stringExpression ';' WEIGHT '=' intExpression ';' '}' ';'

    VAR     shift, and go to state 11
    STRING  shift, and go to state 12

    stringExpression  go to state 13


state 11

   11 stringExpression: VAR .

    $default  reduce using rule 11 (stringExpression)


state 12

   10 stringExpression: STRING .

    $default  reduce using rule 10 (stringExpression)


state 13

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression . ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' stringExpression . ';' WEIGHT '=' intExpression ';' '}' ';'
   12 stringExpression: stringExpression . '+' stringExpression

    ';'  shift, and go to state 14
    '+'  shift, and go to state 15


state 14

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' . WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' stringExpression ';' . WEIGHT '=' intExpression ';' '}' ';'

    WEIGHT  shift, and go to state 16


state 15

   12 stringExpression: stringExpression '+' . stringExpression

    VAR     shift, and go to state 11
    STRING  shift, and go to state 12

    stringExpression  go to state 17


state 16

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT . '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT . '=' intExpression ';' '}' ';'

    '='  shift, and go to state 18


state 17

   12 stringExpression: stringExpression . '+' stringExpression
   12                 | stringExpression '+' stringExpression .

    '+'  shift, and go to state 15

    '+'       [reduce using rule 12 (stringExpression)]
    $default  reduce using rule 12 (stringExpression)


state 18

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' . intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' . intExpression ';' '}' ';'

    NUMBER  shift, and go to state 19
    VAR     shift, and go to state 20

    intExpression  go to state 21


state 19

    7 intExpression: NUMBER .

    $default  reduce using rule 7 (intExpression)


state 20

    8 intExpression: VAR .

    $default  reduce using rule 8 (intExpression)


state 21

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression . ';' ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression . ';' '}' ';'
    9 intExpression: intExpression . '+' intExpression

    ';'  shift, and go to state 22
    '+'  shift, and go to state 23


state 22

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' . ISACHILDOF '=' stringExpression ';' '}' ';'
    6                   | BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' . '}' ';'

    ISACHILDOF  shift, and go to state 24
    '}'         shift, and go to state 25


state 23

    9 intExpression: intExpression '+' . intExpression

    NUMBER  shift, and go to state 19
    VAR     shift, and go to state 20

    intExpression  go to state 26


state 24

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF . '=' stringExpression ';' '}' ';'

    '='  shift, and go to state 27


state 25

    6 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' '}' . ';'

    ';'  shift, and go to state 28


state 26

    9 intExpression: intExpression . '+' intExpression
    9              | intExpression '+' intExpression .

    '+'  shift, and go to state 23

    '+'       [reduce using rule 9 (intExpression)]
    $default  reduce using rule 9 (intExpression)


state 27

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' . stringExpression ';' '}' ';'

    VAR     shift, and go to state 11
    STRING  shift, and go to state 12

    stringExpression  go to state 29


state 28

    6 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' '}' ';' .

    $default  reduce using rule 6 (buildnodeStatement)


state 29

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression . ';' '}' ';'
   12 stringExpression: stringExpression . '+' stringExpression

    ';'  shift, and go to state 30
    '+'  shift, and go to state 15


state 30

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' . '}' ';'

    '}'  shift, and go to state 31


state 31

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' . ';'

    ';'  shift, and go to state 32


state 32

    5 buildnodeStatement: BUILDNODE '{' NAME '=' stringExpression ';' WEIGHT '=' intExpression ';' ISACHILDOF '=' stringExpression ';' '}' ';' .

    $default  reduce using rule 5 (buildnodeStatement)
